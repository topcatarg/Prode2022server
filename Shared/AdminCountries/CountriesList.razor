@using Models
@using MudBlazor
@using Prode2022Server.Services
@inject HttpClient HttpClient
@inject NavigationManager NavigationManager
@inject CountriesListNotifier CountriesListNotifier
@inject ISnackbar Snackbar
@inject DataAdminServices dataAdminService

<MudTable Items="@CountryList" Hover="true"
    Loading="@Loading" 
    LoadingProgressColor="Color.Info"
    RowClassFunc="@SelectedRowClassFunc"
    OnRowClick="RowClickEvent"
    T="Country"
    @ref="CountryTable"
    Dense="true">
    <HeaderContent>
        <MudTh>ID</MudTh>
        <MudTh>Pais</MudTh>
        <MudTh>Codigo bandera</MudTh>
        <MudTh>Bandera</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="ID">@context.ID</MudTd>
        <MudTd DataLabel="Pais">@context.Team</MudTd>
        <MudTd DataLabel="Codigo bandera">@context.Code</MudTd>
        <MudTd DataLabel="Bandera">
            <MudImage Elevation="25" Class="rounded-lg" Src="@($"Images/{@context.Code}.png")"/>
        </MudTd>
        <MudTd >
            <MudIconButton 
                Icon="@Icons.Material.Filled.Delete" 
                aria-label="delete"
                OnClick="() => DeleteRow(context)" />
        </MudTd>
    </RowTemplate>
</MudTable>

<style>
    .selected {
    background-color: #1E88E5 !important;
}

    .selected > td {
        color: white !important;
    }

        .selected > td .mud-input {
            color: white !important;
        }
</style>

@code
{
        List<Country> CountryList = new();
        bool Loading = true;
        private MudTable<Country>? CountryTable;
        int selectedId = -1;
        public async Task LoadCountries()
        {
            Loading = true;
            await InvokeAsync(StateHasChanged);
            CountryList = await dataAdminService.GetAllTournamentTeamsAsync();
            Loading = false;
            await InvokeAsync(StateHasChanged);
        }

        private async void RowClickEvent(TableRowClickEventArgs<Country> tableRowClickEventArgs)
        {
            Country selectedRow; 
            
            if (CountryTable != null && CountryTable.SelectedItem != null)
            {
                selectedRow = tableRowClickEventArgs.Item;
                if(selectedId == selectedRow.ID)
                {
                    //clicked on the same, deselect
                    await CountriesListNotifier.ChangeRow(null);
                }
                else
                {
                    await CountriesListNotifier.ChangeRow(tableRowClickEventArgs.Item);
                }
            }
        }
        private string SelectedRowClassFunc(Country element, int rowNumber)
        {
            if (selectedId == element.ID)
            {
                selectedId = -1;

                return string.Empty;
            }
            else if (CountryTable!.SelectedItem != null && CountryTable.SelectedItem.Equals(element))
            {
                selectedId = element.ID;
                return "selected";
            }
            else
            {
                return string.Empty;
            }
        }

        private async void DeleteRow(Country c)
        {
            var response = await HttpClient.PostAsJsonAsync<Country>(NavigationManager.BaseUri + "DataAdmin/Delete",c);
            if (!response.IsSuccessStatusCode)
            {
                Snackbar.Add("No se elimino la fila",Severity.Error);
            }
            else
            {
                Snackbar.Add("Fila eliminada correctamente",Severity.Info);
            }
            await LoadCountries();
        }
        
}